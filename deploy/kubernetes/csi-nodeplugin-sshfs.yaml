kind: DaemonSet
apiVersion: apps/v1
metadata:
  name: csi-nodeplugin-sshfs
  namespace: csi-sshfs
spec:
  selector:
    matchLabels:
      app: csi-nodeplugin-sshfs
  template:
    metadata:
      labels:
        app: csi-nodeplugin-sshfs
    spec:
      serviceAccountName: csi-nodeplugin-sshfs
      hostNetwork: true
      # to use e.g. Rook orchestrated cluster, and mons' FQDN is resolved
      # through k8s service, set dns policy to cluster first.
      dnsPolicy: ClusterFirstWithHostNet
      containers:
        - name: node-driver-registrar
          image: k8s.gcr.io/sig-storage/csi-node-driver-registrar:v2.6.3
          args:
            - -v=3
            - --csi-address=/csi/csi.sock
            - --kubelet-registration-path=/var/lib/kubelet/plugins/co.p4t.csi.sshfs/csi.sock
          env:
            - name: KUBE_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          volumeMounts:
            - name: socket-dir
              mountPath: /csi
            - name: registration-dir
              mountPath: /registration
          securityContext:
            # This is necessary only for systems with SELinux, where
            # non-privileged sidecar containers cannot access unix domain socket
            # created by privileged CSI driver container
            privileged: true
        - name: sshfs
          image: patricol/csi-sshfs:latest
          imagePullPolicy: Always
          args:
            - run
            - -v=3
            - "--nodeid=$(NODE_ID)"
            - "--endpoint=$(CSI_ENDPOINT)"
            - --csi-driver-name=co.p4t.csi.sshfs
    #        - --disable-controller-support
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: NODE_ID
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: CSI_ENDPOINT
              value: unix://csi/csi.sock
          volumeMounts:
            - name: socket-dir
              mountPath: /csi
            - name: mountpoint-dir
              mountPath: /var/lib/kubelet/pods
              mountPropagation: Bidirectional
            - name: plugin-dir
              mountPath: /var/lib/kubelet/plugins
              mountPropagation: Bidirectional
          securityContext:
            capabilities:
              add:
                - SYS_ADMIN
            privileged: true
            allowPrivilegeEscalation: true
      nodeSelector:
        kubernetes.io/os: linux
      volumes:
        - name: socket-dir
          hostPath:
            path: /var/lib/kubelet/plugins/co.p4t.csi.sshfs/
            type: DirectoryOrCreate
        - name: registration-dir
          hostPath:
            path: /var/lib/kubelet/plugins_registry/
            type: Directory
        - name: mountpoint-dir
          hostPath:
            path: /var/lib/kubelet/pods
            type: DirectoryOrCreate
        - name: plugin-dir
          hostPath:
            path: /var/lib/kubelet/plugins
            type: Directory
